services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - database.env
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_USERNAME", "-U", "$POSTGRES_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
  rabbit:
    image: rabbitmq:3.12-management
    restart: unless-stopped
    container_name: rabbit
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - rabbit_network
  service:
    container_name: partners_service
    env_file:
      - service.env
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "8081:8080"
    build:
      context: ./src/StudMart.PartnersMicroservice
      dockerfile: Presentation/StudMart.PartnersMicroservice.Presentation.WebHost/Dockerfile
    networks:
      - rabbit_network
networks:
  rabbit_network:
    driver: bridge
    name: rabbit_network
  admin_network:
    external: true
    name: admin_network
  